#! /bin/bash
# Retrieves the outward facing IP address from your Airport Extreme
# router, and if it has changed, tell freedns.afraid.org.
#
# By checking your router, it avoids generating any internet traffic
# and freedns.afraid.org activity unless your IP changes. 
#
# Directions:
# 0) Adjust PATH if necessary.  No need for MacOS X.
# 1) Fill in $dynkey with your dynamic authentication token from
#      http://freedns.afraid.org/dynamic/ .
# 2) Fill in $me with your email address.  You can leave it blank
#      if you don't want an email when your IP address changes.
# 3) Add an entry to your crontab to run this script periodically.
#      Script can run as you.  It does not require any privileges to run.

shopt -s extglob

export PATH=/bin:/usr/bin:/sbin:/usr/sbin

typeset ipfile="$HOME/.afraid-dyndns.ip"

typeset dynkey='<Copy your dyndns key here>'
typeset tellafraid=(\
	curl -s "http://freedns.afraid.org/dynamic/update.php?$dynkey")

typeset me=''
typeset tellme=(mail -s 'new ip address' "$me")

function Fail
{
	echo >&2 "$@"
	exit 1
}

# Retrieve the outward facing IP address from Airport Extreme router.
# http://hints.macworld.com/article.php?story=20091222232613368
function AirportIP
{
	typeset router=$(netstat -nr | \
			awk '/^0.0.0.0|^default/ {print $2}') \
			|| return 1
	typeset gw=$(snmpwalk -Os -c public -v 1 "$router" \
				iso.3.6.1.2.1.4.21.1.7.0.0.0.0 | \
				awk '{print $4}') \
				|| return 1
	typeset ip=$(snmpwalk -Os -c public -v 1 "$router" \
				"iso.3.6.1.2.1.4.21.1.7.$gw" | \
				awk '{print $4}') \
				|| return 1

	echo "$ip"
}


typeset ip=$(AirportIP) || Fail "Failed to get Airport IP."

[[ $ip == @(+([0-9]).+([0-9]).+([0-9]).+([0-9])) ]] || \
	Fail "AirportIP return was invalid: '$ip'."

typeset oldip=""
[[ ! -r "$ipfile" ]] || oldip=$(< "$ipfile") || Fail "Can't read '$ipfile'."

if [[ $oldip != $ip ]]
then
	[[ -z $me ]] || \
		{ echo -e "Old = $oldip\nNew = $ip" | "${tellme[@]}"; }
	"${tellafraid[@]}" || \
		Fail "Failed to tell freedns.afraid.org of IP change."
	echo "$ip" > "$ipfile"
fi
